{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"IProducts": {
				"properties": {
					"ID": {
						"type": "string"
					},
					"balance": {
						"type": "string"
					},
					"type": {
						"type": "string"
					},
					"number": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"IUser": {
				"properties": {
					"ID": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Boolean": {
				"properties": {},
				"type": "object",
				"additionalProperties": false
			},
			"IUserDTO": {
				"properties": {
					"ID": {
						"type": "string"
					},
					"username": {
						"type": "string"
					},
					"password": {
						"type": "string"
					}
				},
				"type": "object",
				"additionalProperties": false
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "backend",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/products/save": {
			"post": {
				"operationId": "Save",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IProducts"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Save a new Products. The identifier of the entity isn't mandatory so you can leave it undefined (not written). \nIf you leave it undefined, the 'DAO' layer will generate and assign an ID to you entity automatically.",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProducts"
							}
						}
					}
				}
			}
		},
		"/products/getById": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IProducts"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Return a Products by its ID.",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/products/get": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IProducts"
									},
									"type": "array"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Return a set of Products. Page starts at 0.",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/products/getAll": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IProducts"
									},
									"type": "array"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Return all Products.",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": []
			}
		},
		"/products/deleteById": {
			"delete": {
				"operationId": "DeleteById",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IProducts"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a Products by its ID.",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/products/update": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IProducts"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Update a Products by its ID.",
				"tags": [
					"Products"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IProducts"
							}
						}
					}
				}
			}
		},
		"/user/save": {
			"post": {
				"operationId": "Save",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUser"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Save a new User. The identifier of the entity isn't mandatory so you can leave it undefined (not written). \nIf you leave it undefined, the 'DAO' layer will generate and assign an ID to you entity automatically.",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUser"
							}
						}
					}
				}
			}
		},
		"/user/getById": {
			"get": {
				"operationId": "GetById",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUser"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Return a User by its ID.",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/get": {
			"get": {
				"operationId": "Get",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IUser"
									},
									"type": "array"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Return a set of User. Page starts at 0.",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "page",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					},
					{
						"in": "query",
						"name": "size",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		},
		"/user/getAll": {
			"get": {
				"operationId": "GetAll",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"items": {
										"$ref": "#/components/schemas/IUser"
									},
									"type": "array"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Return all User.",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": []
			}
		},
		"/user/login": {
			"post": {
				"operationId": "Login",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/Boolean"
								}
							}
						}
					},
					"400": {
						"description": "User not found",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUserDTO"
							}
						}
					}
				}
			}
		},
		"/user/deleteById": {
			"delete": {
				"operationId": "DeleteById",
				"responses": {
					"200": {
						"description": "Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUser"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Delete a User by its ID.",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [
					{
						"in": "query",
						"name": "id",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		},
		"/user/update": {
			"put": {
				"operationId": "Update",
				"responses": {
					"200": {
						"description": "Request Success",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/IUser"
								}
							}
						}
					},
					"400": {
						"description": "Bad request",
						"content": {
							"application/json": {
								"schema": {
									"properties": {
										"message": {
											"type": "string"
										}
									},
									"required": [
										"message"
									],
									"type": "object"
								}
							}
						}
					}
				},
				"description": "Update a User by its ID.",
				"tags": [
					"User"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/IUser"
							}
						}
					}
				}
			}
		}
	},
	"servers": [
		{
			"url": "/"
		}
	]
}